.setup-buildtest: &setup-buildtest
  - module load python
  - python -m venv $CI_PROJECT_DIR/pyenv
  - source activate $CI_PROJECT_DIR/pyenv/bin/activate
  - git clone -b devel https://github.com/buildtesters/buildtest    
  - cd buildtest 
  - . setup.sh
  - git log --oneline -1
  - buildtest --help
  - rm -rf $HOME/.buildtest
  - export BUILDTEST_CONFIGFILE=$CI_PROJECT_DIR/config.yml
  - buildtest config validate
  
.cleanup-buildtest: &cleanup-buildtest
  - mkdir -p $CI_PROJECT_DIR/.artifacts
  - cp $BUILDTEST_ROOT/var/{buildtest.log,report.json} $CI_PROJECT_DIR/.artifacts
  - source deactivate

stages:
  - build
  - test
validate_tests:
  stage: build
  tags: [cori-e4s]
  before_script:
    - *setup-buildtest
  rules:
    - if: '$CI_PIPELINE_SOURCE == "web" || $CI_PIPELINE_SOURCE == "push"'
      when: manual
  script:
    - buildtest buildspec find --rebuild --root $CI_PROJECT_DIR/buildspecs
    - buildtest buildspec find invalid   
  
  after_script:
    - *cleanup-buildtest

perlmutter:
  stage: test
  tags: [perlmutter-e4s]
  only:
    refs:
      - schedules
    variables:
      - $PM_TEST == "True"
  before_script:
    - *setup-buildtest   
  script:
    - buildtest buildspec find --rebuild --root $CI_PROJECT_DIR/buildspecs
    - buildtest build -e perlmutter.local.bash -e perlmutter.slurm.regular --maxpendtime 1200 --testdir $CFS/m3503/buildtest/runs/$CI_JOB_NAME/$(date +%F)
    - buildtest report --filter state=FAIL
    - buildtest cdash upload perlmutter-tests
  after_script:
    - *cleanup-buildtest
  artifacts:
    paths:
      - $CI_PROJECT_DIR/.artifacts
      
daily_check:
  stage: test
  only:
    refs:
      - schedules
    variables:
      - $DAILYCHECK == "True"
  tags: [cori-e4s]
  before_script:
    - *setup-buildtest
  script:
    - buildtest buildspec find --rebuild --root $CI_PROJECT_DIR/buildspecs
    - buildtest build --tags daily --filter tags=daily  --testdir $CFS/m3503/buildtest/runs/$CI_JOB_NAME/$(date +%F)
    - buildtest report --filter state=FAIL 
    - buildtest cdash upload daily_check 
  after_script:
    - *cleanup-buildtest
  artifacts:
    paths:
      - $CI_PROJECT_DIR/.artifacts   
  
apps:
  stage: test
  tags: [cori-e4s]
  only: 
    refs: 
      - schedules
    variables:
      - $APP == "True"

  before_script:
  - *setup-buildtest
  script:
    - buildtest buildspec find --rebuild --root $CI_PROJECT_DIR/buildspecs
    - buildtest build --tags compile --filter tags=compile  --testdir $CFS/m3503/buildtest/runs/$CI_JOB_NAME/$(date +%F)
    - buildtest report --filter state=FAIL 
    - buildtest cdash upload apps  
  after_script:
    - *cleanup-buildtest  
  artifacts:
    paths:
      - $CI_PROJECT_DIR/.artifacts

benchmark:
  stage: test
  tags: [cori-e4s]
  only:
    refs:
      - schedules
    variables:
      - $BENCHMARK == "True"

  before_script:
  - *setup-buildtest
  script:
    - buildtest buildspec find --rebuild --root $CI_PROJECT_DIR/buildspecs
    - buildtest build --tags benchmark --filter tags=benchmark --testdir $CFS/m3503/buildtest/runs/$CI_JOB_NAME/$(date +%F)
    - buildtest report --filter state=FAIL
    - buildtest cdash upload benchmark
  after_script:
    - *cleanup-buildtest
  artifacts:
    paths:
      - $CI_PROJECT_DIR/.artifacts

e4s_tests:
  stage: test
  tags: [cori-e4s]
  only:
    refs:
      - schedules
    variables:
      - $E4S == "True"
  before_script:
    - *setup-buildtest
  script:
    - buildtest buildspec find --rebuild --root $CI_PROJECT_DIR/buildspecs
    - buildtest build --tags e4s --maxpendtime 600 --testdir $CFS/m3503/buildtest/runs/$CI_JOB_NAME/$(date +%F)
    - buildtest report --filter state=FAIL
    - buildtest  cdash upload e4s 
  after_script:
    - *cleanup-buildtest  
  artifacts:
    paths:
      - $CI_PROJECT_DIR/.artifacts
